data {
  int<lower=0> n; // sample size
  vector[n] L;
  vector[n] t;
}
transformed data {
  vector[n] tlog = log(t);
}
parameters {
  real log_Lmax;
  real log_k;
  real log_sigma;
  // real c;
  real log_L0;
}
model {
  log_Lmax ~ normal(5, 1);
  log_sigma ~ normal(0, .5);
  log_k ~ normal(-4, 1);
  log_L0 ~ normal(0, 2);

  // intermediate variables
  vector[n] log_mu;
  vector[n] common_term;

  // is log_mix on the log scale? I think so but let's find out
  for (i in 1 : n) {
    log_mu[i] = log_mix(inv_cloglog(log_k + tlog[i]), log_L0, log_Lmax);
  }
  // could easily work on the log scale and use log1p_exp here

  common_term = log1p_exp(2 * (log_sigma - log_mu));

  target += lognormal_lpdf(L | log_mu - common_term / 2, sqrt(common_term));
}
generated quantities {

}


